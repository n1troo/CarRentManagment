@page "/models/"
@using System.Diagnostics

@inject HttpClient _Http
@inject IJSRuntime js
<h3 class="card-card-title">Car models</h3>


@if (Elements == null)
{
    <div class="alert alert-info">Loading....</div>
}
else
{
    <div class="form-group">
    <input class="form-control" type="text" placeholder="Filter..."
        @bind="Filter"
        @bind:event="oninput">
    </div>
    <!-- Circle Buttons -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary"> modele samochodów</h6>
        </div>
        <div class="card-body">
            <table class="table table table-hover">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Name</th>
                        <th scope="col">Created by</th>
                        <th scope="col">UpdatedBy</th>
                        <th scope="col">Data</th>
                        <th scope="col">Button</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var model in Elements)
                    {

                        if (!IsVisible(model))
                        {
                            continue;
                        }
                        <tr>
                            <td>@model.Id</td>
                            <td>@model.Name</td>
                            <td>@model.CreatedBy</td>
                            <td>@model.UpdatedBy</td>
                            <td typeof="data">@model.DateCreated</td>
                            <td>
                                <a href="/models/view" class="btn btn-warning btn-circle btn-sm">
                                        <i class="fas fa-exclamation-triangle"></i>
                                 </a>

                                <button class="btn alert-danger btn-circle btn-sm" @onclick="(()=> Delete(model.Id))">
                                     <i class="far fa-trash-alt"></i>
                            </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private List<Model>? Elements ;
    public string? Filter { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Elements = await _Http.GetFromJsonAsync<List<Model>>(Static.Endpoints.ModelsEndpoint);
    }

    private async Task Delete(int id)
    {
        try
        {
            var confirm = await js.InvokeAsync<bool>("confirm", "Do you want delete?");
            if (confirm)
            {
                var back = await _Http.DeleteAsync($"{Static.Endpoints.ModelsEndpoint}/{id}");
                await OnInitializedAsync();
            }
        }
        catch(Exception ex)
        {
            
        }

    }

    public bool IsVisible(Model model)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if(model.Name != null)
        if (model.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}