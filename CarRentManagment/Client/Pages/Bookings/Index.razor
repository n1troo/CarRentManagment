@page "/bookings/"

@inject HttpClient _client
@inject IJSRuntime js

@if(ElementsBookings == null){
    <Spinner/>
}
else
{
   <div class="form-group">
       <input class="form-control" type="text" placeholder ="filtr..." 
       @bind="FitrBox" 
       @bind:event="oninput" />
   </div>

    <!-- Circle Buttons -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary"> Marki samochodów</h6>
        </div>
        <div class="card-body">
            <table class="table table table-hover">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">TaxId</th>
                        <th scope="col">Created by</th>
                        <th scope="col">UpdatedBy</th>
                        <th scope="col">Data</th>
                        <th scope="col">Button</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var Booking in ElementsBookings)
                    {

                        if (!(IsVisible(Booking)))
                            continue;
                        <tr>
                            <td>@Booking.Id</td>
                            <td>@Booking.Vehicle.Model</td>
                            <td>@Booking.CreatedBy</td>
                            <td>@Booking.UpdatedBy</td>
                            <td typeof="data">@Booking.DateCreated</td>
                            <td>
                                <a href="/Bookings/view" class="btn btn-warning btn-circle btn-sm">
                                        <i class="fas fa-exclamation-triangle"></i>
                                 </a>

                                <button class="btn alert-danger btn-circle btn-sm" @onclick="(()=> Delete(Booking.Id))">
                                     <i class="far fa-trash-alt"></i>
                            </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {

    private List<Booking>? ElementsBookings;
    public string FitrBox;

    protected override async Task OnInitializedAsync() => ElementsBookings = await _client.GetFromJsonAsync<List<Booking>>(Static.Endpoints.BookingsEndpoint);

    private bool IsVisible(Booking Booking)
    {

        if (string.IsNullOrEmpty(FitrBox))
            return true;

        if (Booking.Vehicle.LicensePlateNumber.Contains(FitrBox, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

    private void Delete(int id)
    {
    }
}
