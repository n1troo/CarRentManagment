@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @context.User.Identity?.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/profile" Match="NavLinkMatch.All">
                <span class="oi oi-persone" aria-hidden="true"></span> Hello, @context.User.Identity?.Name!
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/logout" @onclick="BeginSignOut" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Log out
            </NavLink>
        </div>
    </Authorized>

    <NotAuthorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/login" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Log in
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/register" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Register
            </NavLink>
        </div>

    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        //Navigation.NavigateTo("authentication/logout");
    }
}
